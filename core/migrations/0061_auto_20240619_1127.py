# Generated by Django 5.0.6 on 2024-06-19 11:27

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0060_db_manufacturer_accept_db_manufacturer_client_name_and_more'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                CREATE MATERIALIZED VIEW data_adequacy_aggregated AS
                SELECT
                    device_id_id,
                    date_trunc('hour', time) + (floor(extract(minute FROM time) / 15) * interval '15 minutes') AS interval_start,
                    COUNT(pm10) FILTER (WHERE pm10 IS NOT NULL) AS pm10_count,
                    COUNT(so2) FILTER (WHERE so2 IS NOT NULL) AS so2_count,
                    COUNT(co) FILTER (WHERE co IS NOT NULL) AS co_count,
                    COUNT(no2) FILTER (WHERE no2 IS NOT NULL) AS no2_count,
                    COUNT(no) FILTER (WHERE no IS NOT NULL) AS no_count,
                    COUNT(o3) FILTER (WHERE o3 IS NOT NULL) AS o3_count,
                    COUNT(pm2_5) FILTER (WHERE pm2_5 IS NOT NULL) AS pm2_5_count,
                    COUNT(nox) FILTER (WHERE nox IS NOT NULL) AS nox_count,
                    COUNT(wind_speed) FILTER (WHERE wind_speed IS NOT NULL) AS wind_speed_count,
                    COUNT(wind_direction) FILTER (WHERE wind_direction IS NOT NULL) AS wind_direction_count,
                    COUNT(rain_fall) FILTER (WHERE rain_fall IS NOT NULL) AS rain_fall_count,
                    COUNT(temperature) FILTER (WHERE temperature IS NOT NULL) AS temperature_count,
                    COUNT(relative_humidity) FILTER (WHERE relative_humidity IS NOT NULL) AS relative_humidity_count,
                    COUNT(barometric_pressure) FILTER (WHERE barometric_pressure IS NOT NULL) AS pm_count,
                    COUNT(co2) FILTER (WHERE co2 IS NOT NULL) AS co2_count,
                    COUNT(no2_nv) FILTER (WHERE no2_nv IS NOT NULL) AS no2_nv_count,
                    COUNT(co_nv) FILTER (WHERE co_nv IS NOT NULL) AS co_nv_count,
                    COUNT(o3_nv) FILTER (WHERE o3_nv IS NOT NULL) AS o3_nv_count,
                    COUNT(so2_nv) FILTER (WHERE so2_nv IS NOT NULL) AS so2_nv_count,
                    COUNT(pm1_opc) FILTER (WHERE pm1_opc IS NOT NULL) AS pm1_opc_count,
                    COUNT(pm10_opc) FILTER (WHERE pm10_opc IS NOT NULL) AS pm_10_opc_count,
                    COUNT(pm2_5_r) FILTER (WHERE pm2_5_r IS NOT NULL) AS pm2_5_r_count,
                    COUNT(pm10_r) FILTER (WHERE pm10_r IS NOT NULL) AS pm10_r_count,
                    COUNT(g1_rh) FILTER (WHERE g1_rh IS NOT NULL) AS g1_rh_count,
                    COUNT(g1_t) FILTER (WHERE g1_t IS NOT NULL) AS g1_t_count,
                    COUNT(g2_rh) FILTER (WHERE g2_rh IS NOT NULL) AS g2_rh_count,
                    COUNT(pm1) FILTER (WHERE pm1 IS NOT NULL) AS pm1_count,
                    COUNT(g2_t) FILTER (WHERE g2_t IS NOT NULL) AS g2_t_count,
                    COUNT(no_nv) FILTER (WHERE no_nv IS NOT NULL) AS no_nv_count


                FROM
                    "core_db_std_data"
                GROUP BY
                    device_id_id, interval_start
                ORDER BY
                    device_id_id, interval_start;
            """,
            reverse_sql="""
                DROP MATERIALIZED VIEW IF EXISTS data_adequacy_aggregated;
            """
        )
    ]
