# Generated by Django 5.0.4 on 2024-05-21 09:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='db_AlertConfig',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('desc', models.CharField(max_length=255)),
                ('error_code', models.IntegerField()),
                ('status', models.SmallIntegerField(default=0)),
                ('email_subject', models.CharField(max_length=255)),
                ('create_dt', models.DateTimeField(auto_now_add=True)),
                ('modified_dt', models.DateTimeField(auto_now=True)),
                ('isCurrent', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='db_AQData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField()),
                ('measure_dt', models.DateTimeField()),
                ('pm1', models.FloatField()),
                ('pm2_5', models.FloatField()),
                ('pm10', models.FloatField()),
                ('co', models.FloatField()),
                ('co2', models.FloatField()),
                ('no', models.FloatField()),
                ('no2', models.FloatField()),
                ('o3', models.FloatField()),
                ('so2', models.FloatField()),
                ('co_aev', models.FloatField()),
                ('co_wev', models.FloatField()),
                ('co2_aev', models.FloatField()),
                ('co2_wev', models.FloatField()),
                ('no_aev', models.FloatField()),
                ('no_wev', models.FloatField()),
                ('no2_aev', models.FloatField()),
                ('no2_wev', models.FloatField()),
                ('o3_aev', models.FloatField()),
                ('o3_wev', models.FloatField()),
                ('so2_aev', models.FloatField()),
                ('so2_wev', models.FloatField()),
                ('humidity', models.FloatField()),
                ('temperature1', models.FloatField()),
                ('temperature2', models.FloatField()),
                ('pressure', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='db_AQDataRawDoc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('json_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='db_DataSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.SmallIntegerField(default=0)),
                ('version', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='db_DEVICE',
            fields=[
                ('device_id', models.CharField(primary_key=True, serialize=False)),
                ('serial_no', models.CharField(max_length=255)),
                ('mac', models.CharField(max_length=25)),
                ('sim_manufacturer', models.CharField(max_length=100)),
                ('sim_number', models.CharField(max_length=45)),
                ('address', models.TextField(max_length=1000)),
                ('parameters', models.DecimalField(decimal_places=6, max_digits=9)),
                ('altitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('installdt', models.DateTimeField()),
                ('approved_by', models.CharField(max_length=255)),
                ('remarks', models.CharField(max_length=255)),
                ('notes', models.TextField(max_length=1000)),
                ('status', models.IntegerField(default=0)),
                ('land_use', models.CharField(max_length=45)),
                ('create_dt', models.DateTimeField(auto_now_add=True)),
                ('modified_dt', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='db_DeviceModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=1000)),
                ('drivenname', models.CharField(max_length=255)),
                ('classname', models.CharField(max_length=255)),
                ('company', models.CharField(max_length=100)),
                ('company_url', models.TextField(max_length=1000)),
                ('manual_url', models.TextField(max_length=1000)),
                ('status', models.IntegerField(default=0)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='db_Host',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=1000)),
                ('status', models.IntegerField(default=0)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='db_LOCATION',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('address', models.TextField(default='NA', max_length=1000)),
                ('status', models.IntegerField(default=0)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='db_MANUFACTURER',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('address', models.TextField(default='NA', max_length=1000)),
                ('person_name', models.CharField(max_length=255)),
                ('person_email', models.CharField(max_length=255)),
                ('person_Contact', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
                ('notes', models.TextField(max_length=1000)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='db_Network',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('organization', models.CharField(max_length=255)),
                ('person_name', models.CharField(max_length=255)),
                ('person_email', models.CharField(max_length=255)),
                ('person_mobile', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=1000)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('country', models.CharField(max_length=50)),
                ('status', models.IntegerField(default=0)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='db_Parameter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('units', models.CharField(max_length=100)),
                ('status', models.IntegerField(default=0)),
                ('createddt', models.DateTimeField()),
                ('modifieddt', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='db_Permission',
            fields=[
                ('permission_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.permission')),
                ('desc', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
                ('createddt', models.DateTimeField()),
                ('modifieddt', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
            ],
            bases=('auth.permission',),
            managers=[
                ('objects', django.contrib.auth.models.PermissionManager()),
            ],
        ),
        migrations.CreateModel(
            name='db_Role',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('desc', models.CharField(max_length=255)),
                ('version', models.IntegerField()),
                ('status', models.ImageField(default=0, upload_to='')),
                ('created_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
                ('created_By', models.IntegerField()),
                ('modified_By', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='db_Units',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('notation', models.CharField(max_length=45)),
                ('desc', models.CharField(max_length=255)),
                ('createddt', models.DateTimeField()),
                ('modifieddt', models.DateTimeField()),
                ('version', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
                ('status', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='db_AQDataExt',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('measure_dt', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('windspeed', models.FloatField()),
                ('winddirection', models.IntegerField()),
                ('rainfall', models.FloatField()),
                ('aqi', models.FloatField()),
                ('battery', models.FloatField()),
                ('pwr', models.FloatField()),
                ('g1_mh', models.FloatField()),
                ('g1_mt', models.FloatField()),
                ('g1_co_t', models.FloatField()),
                ('g1_no2_t', models.FloatField()),
                ('g1_o3_t', models.FloatField()),
                ('g2_mh', models.FloatField()),
                ('g2_mt', models.FloatField()),
                ('g2_so2_t', models.FloatField()),
                ('AQData_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_aqdata')),
            ],
        ),
        migrations.AddField(
            model_name='db_aqdata',
            name='device_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_device'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='DEVICEMODEL_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_devicemodel'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='LOCATIONS_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_location'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='MANUFACTURER_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_manufacturer'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='NETWORK_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_network'),
        ),
        migrations.CreateModel(
            name='db_RoleHasPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_role')),
            ],
        ),
        migrations.CreateModel(
            name='db_SITE',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.IntegerField()),
                ('SITECol', models.CharField(max_length=255)),
                ('create_dt', models.DateTimeField()),
                ('modified_dt', models.DateTimeField()),
                ('HOST_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_host')),
                ('Location_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_location')),
                ('NETWORK_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_network')),
            ],
        ),
        migrations.AddField(
            model_name='db_device',
            name='SITE_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_site'),
        ),
        migrations.CreateModel(
            name='db_Transformations',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('transformation', models.TextField()),
                ('executed_at', models.DateTimeField()),
                ('destination_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transformations_destination', to='core.db_datasource')),
                ('source_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transformations_source', to='core.db_datasource')),
            ],
        ),
        migrations.CreateModel(
            name='db_AQDataSparse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.IntegerField(default=0)),
                ('measure_dt', models.DateTimeField()),
                ('createddt', models.DateTimeField()),
                ('isRaw', models.SmallIntegerField()),
                ('param_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Parameter1', to='core.db_parameter')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_parameter')),
                ('param_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Unit1', to='core.db_units')),
            ],
        ),
        migrations.CreateModel(
            name='db_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mobile', models.CharField(max_length=45)),
                ('version', models.IntegerField()),
                ('isCurrent', models.SmallIntegerField()),
                ('createddt', models.DateTimeField()),
                ('modifieddt', models.DateTimeField()),
                ('ROLE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_role')),
                ('createdBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_by_user', to='core.db_user')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('modifiedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modified_by_user', to='core.db_user')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='db_units',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Units', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_units',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Units', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_site',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Sit', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_site',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Site', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_permission',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_permissions', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_permission',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modified_permissions', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_parameter',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Parameter', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_parameter',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Parameter', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_network',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Network', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_network',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Network', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_manufacturer',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_manufacturer', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_manufacturer',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_manufacturer', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_location',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Location', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_location',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Location', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_host',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_host', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_host',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_host', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_host',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_devicemodel',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_DeviceModel', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_devicemodel',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_DeviceModel', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Device', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_device',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Device', to='core.db_user'),
        ),
        migrations.CreateModel(
            name='db_AlertDL',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('alert_config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_alertconfig')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_user')),
            ],
        ),
        migrations.AddField(
            model_name='db_alertconfig',
            name='createdBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_AlterConfig', to='core.db_user'),
        ),
        migrations.AddField(
            model_name='db_alertconfig',
            name='modifiedBy',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_AlterConfig', to='core.db_user'),
        ),
        migrations.CreateModel(
            name='db_VENDOR',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('address', models.TextField(max_length=1000)),
                ('person_name', models.CharField(max_length=255)),
                ('person_email', models.CharField(max_length=255)),
                ('person_Moblie', models.CharField(max_length=255)),
                ('person_Title', models.CharField(max_length=255)),
                ('status', models.IntegerField(default=0)),
                ('create_dt', models.DateTimeField(auto_now_add=True)),
                ('modified_dt', models.DateTimeField(auto_now=True)),
                ('createdBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Created_Vendor', to='core.db_user')),
                ('modifiedBy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modified_Vendor', to='core.db_user')),
            ],
        ),
        migrations.AddField(
            model_name='db_device',
            name='VENDOR_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.db_vendor'),
        ),
    ]
